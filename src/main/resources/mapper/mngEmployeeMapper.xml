<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- com.emp.employ.employee.EmployeeDTO -->
<mapper namespace="com.emp.manager.employee.MngEmployeeMapper">
	
	<!-- 직원 등록 : employeeInsert -->
	<insert id="employeeInsert">
		INSERT INTO employees
			(employee_id,
			 password,
			 department_id,
			 worktype_id,
			 position_id,
			 name,
			 gender,
			 birthdate,
			 <if test="phone_num != null">
			 	phone_num ,
			 </if>
			 <if test="email != null">
			 	email ,
			 </if>
			 address,
			 employment_date)
		VALUES
			(#{employee_id},
			#{password},
			#{department_id},
			#{worktype_id},
			#{position_id},
			#{name},
			#{gender},
			#{birthdate},
			<if test="phone_num != null">
				#{phone_num} ,
			</if>
			<if test="email != null">
				#{email} ,
			</if>
			(SELECT province || ' ' || search AS address FROM address WHERE address_id = #{address_id}),
			#{employment_date}
			)
	</insert>
	
	<!-- 직원 DELETE -->
	<delete id="employeeDelete">
		DELETE FROM
			employees
		WHERE
			employee_id = #{employee_id}
	</delete>
	
	<!-- 등록된 직원인지 검증 -->
	<select id="employeeEquals" resultType="int">
		SELECT
			COUNT(*) AS CNT
		FROM
			EMPLOYEES
		WHERE
			name = #{name} AND
			employment_date = #{employment_date} AND
			phone_num = #{phone_num}
	</select>
	
	<!-- 부서 담당자로 지정하기 전 담당자가 존재하는지 확인 -->
	<select id="managerContains" resultType="int">
		SELECT
			count(manager_name)
		FROM
			departments
		WHERE
			department_id = #{department_id}
	</select>
	
	<!-- 부서 담당자로 지정 -->
	<update id="managerUpdate">
		UPDATE
			departments
		SET
			manager_id = #{employee_id},
			manager_name = #{name}
		WHERE
			department_id = #{department_id}
	</update>
	
	<!-- 인사담당자 확인 SELECT -->
	<select id="hrPart" resultType="int">
		SELECT
    		COUNT(*) AS cnt
		FROM
    		departments D, employees E
		WHERE
    		E.department_id = D.department_id AND
		    E.employee_id = #{employee_id} AND
    		D.manager_id = #{employee_id} AND
		    D.department_id = '9010'	
	</select>
	
	<!-- 직원 목록 검색 : 검색어 부서명 or 직원명 -->
	<select id="searchEmp" resultType="com.emp.employ.employee.EmployeeDTO">
		SELECT
			E.name,
			P.position_name,
			E.employee_id,
			W.worktype,
			TO_CHAR(E.employment_date, 'YYYY-MM-DD') AS employment_date,
			D.department_name,
			D.manager_name,
			TO_CHAR(E.birthdate, 'YYYY-MM-DD') AS birthdate,
			E.address
		FROM
			employees E, departments D, positions P, worktypes W
		WHERE
			E.department_id = D.department_id AND
			E.position_id = P.position_id AND
			E.worktype_id = W.worktype_id AND
			(E.name LIKE '%${search}%'            OR 
			 D.department_name LIKE '%${search}%' OR 
			 P.position_name LIKE '%${search}%'   OR
			 W.worktype LIKE '%${search}%') AND
			E.emp_flag = 1
	</select>
	
	<!-- 당일 출근 인원 카운트 -->
	<select id="nowWorkEmpCount" resultType="int">
		SELECT
		    COUNT(*) AS CNT
		FROM
		    attendance_record 
		WHERE
		    TO_CHAR(currentdate, 'YYYY-MM-DD') = TO_CHAR(SYSDATE, 'YYYY-MM-DD') AND
		    atte_start IS NOT NULL
	</select>
	
	<!-- 당일 부서별 출근 인원 카운트 -->
	<select id="nowPartEmpCount" resultType="int">
		SELECT
			COUNT(*)
		FROM
			attendance_record AR, employees E, departments D
		WHERE
			E.department_id = D.department_id AND
			E.employee_id = AR.employee_id AND
			TO_CHAR(currentdate, 'YYYY-MM-DD') = TO_CHAR(SYSDATE, 'YYYY-MM-DD') AND
			atte_start IS NOT NULL AND
			D.department_id = #{department_id}
	</select>
	
	<!-- 전체 직원 수 카운트 -->
	<select id="allEmpCount" resultType="int">
		SELECT
			COUNT(*)
		FROM
			employees
	</select>
	
	<!-- 자기 부서 직원 수 카운트 -->
	<select id="departAllEmpCount" resultType="int">
		SELECT
			COUNT(*)
		FROM
			employees
		WHERE
			department_id = #{department_id}
	</select>
	
	<!-- 당일 기준 휴가자 조회 -->
	<select id="nowLeaveEmp" resultType="int">
		SELECT
		    COUNT(*)
		FROM
		    employees E, attendance_record AR, departments D, leave_history LH
		WHERE
		    E.department_id = D.department_id AND
		    E.employee_id = AR.employee_id AND
		    E.employee_id = LH.employee_id AND
		    TO_CHAR(AR.currentdate, 'YYYY-MM-DD') = TO_CHAR(SYSDATE, 'YYYY-MM-DD') AND
		    D.department_id = #{department_id} AND
		    LH.status = 1
	</select>
	
</mapper>








