<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.emp.employ.leave.LeaveMapper">

<insert id="insertLeave">
	INSERT INTO leave_history(
		seq,
		employee_id,
		reg_date,
		annual_days,
		leave_start_date,
		leave_end_date,
		content,
		status
	)
	VALUES(
		S_LEAVE_HIS.NEXTVAL,
		#{employee_id},
		#{reg_date},
		#{annual_days},
		#{leave_start_date},
		#{leave_end_date},
		#{content},
		0
	)
</insert>

<insert id="leaveAgree2">
	INSERT INTO annualleave(
		employee_id, 
		leave_date, 
		leave_type, 
		leave_count, 
		content
	)
	VALUES(
		#{employee_id},
		#{leave_start_date},
		'USE',
		#{annual_days},
		#{content}
	)
</insert>

<select id="getLeaveReqList" resultType="com.emp.employ.leave.LeaveReqDTO">
	SELECT
		lh.status,
		lh.annual_days,
		lh.seq,
		TO_CHAR(lh.reg_date,'YYYY-MM-DD') AS reg_date,
		e.name, 
		e.employee_id            
	FROM
		leave_history lh, employees e, departments D
	WHERE
		lh.employee_id = e.employee_id AND
		e.department_id = D.department_id AND
		e.department_id = #{department_id} AND
		lh.status in(0,1)
	ORDER BY lh.seq DESC
</select>

<select id="getLeaveHistoryList" resultType="com.emp.employ.leave.LeaveReqDTO">
	SELECT 
		seq, 
		employee_id, 
		TO_CHAR(reg_date,'YYYY-MM-DD') AS reg_date, 
		annual_days,
		status
	FROM   leave_history  
	WHERE	 employee_id = #{employee_id}
	ORDER BY seq DESC
</select>

<select id="getLeave_count" resultType="com.emp.employ.leave.LeaveReqDTO">
SELECT
   D.employee_id,
   CASE
   WHEN count(D.leave_count) = 0 THEN 0
   WHEN count(D.leave_count) != 0 THEN MIN(D.leave_count)
   END AS leave_count FROM
(SELECT
   employee_id,
   SUM(CASE
      WHEN leave_type = 'SAVE' THEN leave_count
      WHEN leave_type = 'USE' THEN -leave_count
      ELSE 0
   END) AS leave_count
FROM
   annualleave
WHERE
   employee_id = #{employee_id}
GROUP BY employee_id) D
GROUP BY employee_id
</select>

<select id="leaveDetail" resultType="com.emp.employ.leave.LeaveReqDTO">
	SELECT 
		e.name,
		e.employee_id,
		e.phone_num,
		d.department_name,
		d.manager_name,
		lh.seq,
		TO_CHAR(lh.reg_date,'YYYY-MM-DD') AS reg_date,
		lh.annual_days,
		TO_CHAR(lh.leave_start_date,'YYYY-MM-DD') AS leave_start_date,
		TO_CHAR(lh.leave_end_date,'YYYY-MM-DD') AS leave_end_date,
		lh.content,
		lh.status
	FROM leave_history lh 
	JOIN employees e   ON lh.employee_id = e.employee_id
	JOIN departments d ON e.department_id = d.department_id
	WHERE lh.seq = #{seq}
</select>

<update id="empLeaveUpdate">
	UPDATE leave_history
	SET 
		reg_date = #{reg_date},
		leave_start_date = #{leave_start_date},
		leave_end_date = #{leave_end_date},
		annual_days = #{annual_days},
		content = #{content},
		status = 0
	WHERE seq = #{seq}
</update>

<update id="leaveAgree">
	UPDATE leave_history
	SET 
	 status = 1
	WHERE seq = #{seq}
</update>

<update id="leaveRefuse">
	UPDATE leave_history
	SET 
	 status = 2
	WHERE seq = #{seq}
</update>

<select id="leaveRead" resultType="double">
	SELECT
	    CASE
	    WHEN COUNT(D.leave_count) = 0 THEN 0
	    WHEN COUNT(D.leave_count) != 0 THEN MIN(D.leave_count)
	    END AS leave_count
	FROM
	(SELECT
	   SUM(CASE
	      WHEN leave_type = 'SAVE' THEN leave_count
	      WHEN leave_type = 'USE' THEN - leave_count
	      ELSE 0
	   END) AS leave_count
	FROM
	   annualleave
	WHERE
	   employee_id = #{employee_id}
	GROUP BY employee_id) D
</select>

<delete id="submitCancel">
	DELETE FROM annualleave
	WHERE leave_id = (
		SELECT leave_id
		FROM annualleave
		WHERE 
			employee_id = #{employee_id}
	  AND 
	  	leave_date = #{leave_start_date}
	)
</delete>

</mapper>





